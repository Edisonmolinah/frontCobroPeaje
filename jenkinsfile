pipeline {
    agent {
        label 'Slave4_Induccion'
    }

    options {
    	buildDiscarder(logRotator(numToKeepStr: '3'))
 	disableConcurrentBuilds()
    }

    tools {
        jdk 'JDK8_Centos'
    }

    stages{
     stage('Checkout') {
      steps{
        echo "------------>Checkout<------------"
		checkout scm
      }
    }

        stage('NPM Install') {
      steps {
        withEnv(['NPM_CONFIG_LOGLEVEL=warn']) {
          sh 'npm install'
        }
      }
    }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Tests Unit') {
            steps {
                sh 'npm run test -- --watch=false --browsers ChromeHeadless'
            }
        }


        stage('Static Code Analysis') {
            steps{
                echo '------------>Análisis de código estático<------------'
                withSonarQubeEnv('Sonar') {
                        //sh "${tool name: 'SonarScanner', type:'hudson.plugins.sonar.SonarRunnerInstallation'}/bin/sonar-scanner"
                        sonarqubeMasQualityGatesP(sonarKey:'co.com.ceiba.adn:edison.frontpagopeaje-edison.molina',
                        sonarName:'CeibaADN-frontPagoPeaje-edison.molina',
                        sonarPathProperties:'./sonar-project.properties')
                    }

            }
    }
    }

    post{
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
            mail (to: 'edison.molina@ceiba.com.co', subject: "Failed Pipeline:${currentBuild.fullDisplayName}",body: "Something is wrong with ${env.BUILD_URL}") 
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}